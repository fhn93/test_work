// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage;
using Microsoft.EntityFrameworkCore.Storage.Internal;
using System;
using test;

namespace test.Migrations
{
    [DbContext(typeof(WokerContext))]
    [Migration("20171029222448_DbMigration")]
    partial class DbMigration
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.0.0-rtm-26452");

            modelBuilder.Entity("test.Accaunt", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Login");

                    b.Property<string>("Password");

                    b.HasKey("Id");

                    b.ToTable("Accaunts");
                });

            modelBuilder.Entity("test.Woker", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("AccauntId");

                    b.Property<DateTime>("Begin");

                    b.Property<string>("Name");

                    b.Property<int>("Rate");

                    b.Property<int?>("ShefId");

                    b.Property<string>("Surname");

                    b.Property<string>("Type");

                    b.HasKey("Id");

                    b.HasIndex("AccauntId")
                        .IsUnique();

                    b.HasIndex("ShefId");

                    b.ToTable("Wokers");
                });

            modelBuilder.Entity("test.Woker", b =>
                {
                    b.HasOne("test.Accaunt", "Accaunt")
                        .WithOne("Woker")
                        .HasForeignKey("test.Woker", "AccauntId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("test.Woker", "Shef")
                        .WithMany("Subordinate")
                        .HasForeignKey("ShefId");
                });
#pragma warning restore 612, 618
        }
    }
}
